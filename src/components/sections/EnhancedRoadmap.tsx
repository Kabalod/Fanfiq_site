"use client";

import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { ProgressRing } from "@/components/ui/chart";
import { 
  CheckCircle, 
  Clock, 
  Zap, 
  Users, 
  Globe, 
  DollarSign, 
  ChevronRight,
  Calendar,
  Target
} from "lucide-react";

const roadmapData = [
  {
    id: "mvp",
    phase: "–≠—Ç–∞–ø 1: MVP",
    title: "–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ –∂–∏–∑–Ω–µ—Å–ø–æ—Å–æ–±–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç",
    status: "completed",
    progress: 100,
    duration: "3 –º–µ—Å—è—Ü–∞",
    investment: "$50K",
    icon: <CheckCircle className="w-6 h-6" />,
    color: "#10b981",
    tasks: [
      "‚úÖ API –∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL",
      "‚úÖ –ü–∞—Ä—Å–µ—Ä –¥–ª—è Ficbook.net",
      "‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–∏—Å–∫–∞",
      "‚úÖ –ë–∞–∑–æ–≤–∞—è —á–∏—Ç–∞–ª–∫–∞",
      "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π (Docker + Railway)"
    ],
    metrics: {
      users: "1K+",
      stories: "100K+",
      satisfaction: "89%"
    }
  },
  {
    id: "growth",
    phase: "–≠—Ç–∞–ø 2: –†–æ—Å—Ç –≤ –†–§",
    title: "–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ —Ä—ã–Ω–∫–∞",
    status: "in-progress",
    progress: 75,
    duration: "2 –º–µ—Å—è—Ü–∞",
    investment: "$75K",
    icon: <Zap className="w-6 h-6" />,
    color: "#6366f1",
    tasks: [
      "‚úÖ –ü–∞—Ä—Å–µ—Ä –¥–ª—è Author.Today",
      "‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Litnet",
      "üîÑ –£–ª—É—á—à–µ–Ω–Ω–∞—è —á–∏—Ç–∞–ª–∫–∞ v2.0",
      "üîÑ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
      "‚è≥ –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
    ],
    metrics: {
      users: "10K+",
      stories: "500K+",
      satisfaction: "92%"
    }
  },
  {
    id: "features",
    phase: "–≠—Ç–∞–ø 3: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏",
    title: "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏",
    status: "planned",
    progress: 0,
    duration: "2 –º–µ—Å—è—Ü–∞",
    investment: "$100K",
    icon: <Users className="w-6 h-6" />,
    color: "#8b5cf6",
    tasks: [
      "‚è≥ –°–∏—Å—Ç–µ–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –ø—Ä–æ—Ñ–∏–ª–µ–π",
      "‚è≥ –ó–∞–∫–ª–∞–¥–∫–∏ –∏ –∏—Å—Ç–æ—Ä–∏—è —á—Ç–µ–Ω–∏—è",
      "‚è≥ –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–æ–≤",
      "‚è≥ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
      "‚è≥ –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, —Ä–µ–π—Ç–∏–Ω–≥–∏)"
    ],
    metrics: {
      users: "50K+",
      stories: "1M+",
      satisfaction: "94%"
    }
  },
  {
    id: "mobile",
    phase: "–≠—Ç–∞–ø 4: UX & Mobile",
    title: "–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ —É–ª—É—á—à–µ–Ω–Ω—ã–π UX",
    status: "planned",
    progress: 0,
    duration: "3 –º–µ—Å—è—Ü–∞",
    investment: "$150K",
    icon: <Target className="w-6 h-6" />,
    color: "#f59e0b",
    tasks: [
      "‚è≥ PWA-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
      "‚è≥ –û—Ñ—Ñ–ª–∞–π–Ω —á—Ç–µ–Ω–∏–µ",
      "‚è≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∏—Ç–∞–ª–∫–∏ (—à—Ä–∏—Ñ—Ç—ã, —Ç–µ–º—ã)",
      "‚è≥ –≠–∫—Å–ø–æ—Ä—Ç –≤ —Ñ–æ—Ä–º–∞—Ç—ã (EPUB, PDF)",
      "‚è≥ –ì–æ–ª–æ—Å–æ–≤–æ–µ —á—Ç–µ–Ω–∏–µ (TTS)"
    ],
    metrics: {
      users: "100K+",
      stories: "2M+",
      satisfaction: "96%"
    }
  },
  {
    id: "international",
    phase: "–≠—Ç–∞–ø 5: –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π —Ä—ã–Ω–æ–∫",
    title: "–ì–ª–æ–±–∞–ª—å–Ω–∞—è —ç–∫—Å–ø–∞–Ω—Å–∏—è",
    status: "planned",
    progress: 0,
    duration: "4 –º–µ—Å—è—Ü–∞",
    investment: "$200K",
    icon: <Globe className="w-6 h-6" />,
    color: "#06d6a0",
    tasks: [
      "‚è≥ –ü–∞—Ä—Å–µ—Ä –¥–ª—è AO3",
      "‚è≥ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Fanfiction.net",
      "‚è≥ –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (EN, ES, FR)",
      "‚è≥ –ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω—ã–π –ø–æ–∏—Å–∫",
      "‚è≥ –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã"
    ],
    metrics: {
      users: "1M+",
      stories: "10M+",
      satisfaction: "95%"
    }
  },
  {
    id: "monetization",
    phase: "–≠—Ç–∞–ø 6: –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è",
    title: "–£—Å—Ç–æ–π—á–∏–≤–∞—è –±–∏–∑–Ω–µ—Å-–º–æ–¥–µ–ª—å",
    status: "planned",
    progress: 0,
    duration: "3 –º–µ—Å—è—Ü–∞",
    investment: "$250K",
    icon: <DollarSign className="w-6 h-6" />,
    color: "#ef4444",
    tasks: [
      "‚è≥ Pro-–∞–∫–∫–∞—É–Ω—Ç—ã —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏",
      "‚è≥ –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–æ–≤",
      "‚è≥ –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞",
      "‚è≥ –ù–∞—Ç–∏–≤–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞",
      "‚è≥ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è"
    ],
    metrics: {
      users: "2M+",
      revenue: "$500K+/–º–µ—Å",
      satisfaction: "97%"
    }
  }
];

export function EnhancedRoadmap() {
  const [selectedPhase, setSelectedPhase] = useState<string | null>(null);

  const getStatusColor = (status: string) => {
    switch (status) {
      case "completed": return "bg-green-100 text-green-800";
      case "in-progress": return "bg-blue-100 text-blue-800";
      default: return "bg-gray-100 text-gray-800";
    }
  };

  const getStatusIcon = (status: string) => {
    switch (status) {
      case "completed": return "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ";
      case "in-progress": return "üîÑ –í —Ä–∞–±–æ—Ç–µ";
      default: return "‚è≥ –ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è";
    }
  };

  return (
    <section className="py-20 bg-gradient-to-br from-gray-50 to-blue-50">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.6 }}
          className="text-center mb-16"
        >
          <h2 className="text-4xl font-bold text-gray-900 mb-4">
            –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            –ü–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è Fanfiq –æ—Ç MVP –¥–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã —Å —É—Å—Ç–æ–π—á–∏–≤–æ–π –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–µ–π
          </p>
        </motion.div>

        {/* Timeline Overview */}
        <motion.div
          initial={{ opacity: 0, scale: 0.9 }}
          whileInView={{ opacity: 1, scale: 1 }}
          viewport={{ once: true }}
          transition={{ duration: 0.6 }}
          className="mb-16"
        >
          <Card className="bg-white shadow-xl">
            <CardHeader>
              <CardTitle className="text-center text-2xl">–û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–æ–µ–∫—Ç–∞</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="flex flex-wrap justify-center gap-8 mb-8">
                <div className="text-center">
                  <ProgressRing progress={29} size={120} color="#6366f1" />
                  <p className="mt-2 font-semibold">–û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å</p>
                </div>
                <div className="text-center">
                  <div className="text-4xl font-bold text-green-600 mb-2">$625K</div>
                  <p className="text-gray-600">–û–±—â–∏–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏</p>
                </div>
                <div className="text-center">
                  <div className="text-4xl font-bold text-blue-600 mb-2">17 –º–µ—Å</div>
                  <p className="text-gray-600">–í—Ä–µ–º—è –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è</p>
                </div>
              </div>
            </CardContent>
          </Card>
        </motion.div>

        {/* Roadmap Cards */}
        <div className="space-y-8">
          {roadmapData.map((phase, index) => (
            <motion.div
              key={phase.id}
              initial={{ opacity: 0, x: index % 2 === 0 ? -50 : 50 }}
              whileInView={{ opacity: 1, x: 0 }}
              viewport={{ once: true }}
              transition={{ delay: index * 0.1, duration: 0.6 }}
            >
              <Card className={`overflow-hidden hover:shadow-2xl transition-all duration-300 ${
                selectedPhase === phase.id ? 'ring-2 ring-blue-500' : ''
              }`}>
                <CardHeader 
                  className="cursor-pointer"
                  onClick={() => setSelectedPhase(selectedPhase === phase.id ? null : phase.id)}
                >
                  <div className="flex items-center justify-between">
                    <div className="flex items-center space-x-4">
                      <div 
                        className="w-12 h-12 rounded-full flex items-center justify-center text-white"
                        style={{ backgroundColor: phase.color }}
                      >
                        {phase.icon}
                      </div>
                      <div>
                        <CardTitle className="text-xl">{phase.phase}</CardTitle>
                        <p className="text-gray-600">{phase.title}</p>
                      </div>
                    </div>
                    
                    <div className="flex items-center space-x-4">
                      <Badge className={getStatusColor(phase.status)}>
                        {getStatusIcon(phase.status)}
                      </Badge>
                      <ProgressRing 
                        progress={phase.progress} 
                        size={60} 
                        color={phase.color}
                      />
                      <ChevronRight 
                        className={`w-5 h-5 transition-transform ${
                          selectedPhase === phase.id ? 'rotate-90' : ''
                        }`} 
                      />
                    </div>
                  </div>
                </CardHeader>

                <AnimatePresence>
                  {selectedPhase === phase.id && (
                    <motion.div
                      initial={{ opacity: 0, height: 0 }}
                      animate={{ opacity: 1, height: "auto" }}
                      exit={{ opacity: 0, height: 0 }}
                      transition={{ duration: 0.3 }}
                    >
                      <CardContent className="pt-0 border-t">
                        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
                          {/* Tasks */}
                          <div>
                            <h4 className="font-semibold text-lg mb-4 flex items-center">
                              <Target className="w-5 h-5 mr-2" />
                              –ö–ª—é—á–µ–≤—ã–µ –∑–∞–¥–∞—á–∏
                            </h4>
                            <ul className="space-y-2">
                              {phase.tasks.map((task, taskIndex) => (
                                <motion.li
                                  key={taskIndex}
                                  initial={{ opacity: 0, x: -20 }}
                                  animate={{ opacity: 1, x: 0 }}
                                  transition={{ delay: taskIndex * 0.1 }}
                                  className="text-gray-700"
                                >
                                  {task}
                                </motion.li>
                              ))}
                            </ul>
                          </div>

                          {/* Metrics & Details */}
                          <div className="space-y-6">
                            <div>
                              <h4 className="font-semibold text-lg mb-4 flex items-center">
                                <Calendar className="w-5 h-5 mr-2" />
                                –î–µ—Ç–∞–ª–∏ —ç—Ç–∞–ø–∞
                              </h4>
                              <div className="grid grid-cols-2 gap-4">
                                <div className="bg-gray-50 p-3 rounded-lg">
                                  <div className="text-sm text-gray-600">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</div>
                                  <div className="font-semibold">{phase.duration}</div>
                                </div>
                                <div className="bg-gray-50 p-3 rounded-lg">
                                  <div className="text-sm text-gray-600">–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏</div>
                                  <div className="font-semibold">{phase.investment}</div>
                                </div>
                              </div>
                            </div>

                            <div>
                              <h4 className="font-semibold text-lg mb-4">–û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</h4>
                              <div className="grid grid-cols-1 gap-3">
                                {Object.entries(phase.metrics).map(([key, value]) => (
                                  <div key={key} className="flex justify-between items-center bg-gray-50 p-3 rounded-lg">
                                    <span className="text-gray-600 capitalize">
                                      {key === 'users' ? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏' : 
                                       key === 'stories' ? '–§–∞–Ω—Ñ–∏–∫–∏' : 
                                       key === 'satisfaction' ? '–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å' :
                                       key === 'revenue' ? '–î–æ—Ö–æ–¥' : key}
                                    </span>
                                    <span className="font-semibold" style={{ color: phase.color }}>
                                      {value}
                                    </span>
                                  </div>
                                ))}
                              </div>
                            </div>
                          </div>
                        </div>
                      </CardContent>
                    </motion.div>
                  )}
                </AnimatePresence>
              </Card>
            </motion.div>
          ))}
        </div>

        {/* Summary */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ delay: 0.5, duration: 0.6 }}
          className="mt-16 text-center"
        >
          <Card className="bg-gradient-to-r from-blue-600 to-purple-600 text-white">
            <CardContent className="p-8">
              <h3 className="text-2xl font-bold mb-4">–ò—Ç–æ–≥–æ–≤—ã–µ —Ü–µ–ª–∏</h3>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div>
                  <div className="text-3xl font-bold mb-2">2M+</div>
                  <div className="text-blue-100">–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>
                </div>
                <div>
                  <div className="text-3xl font-bold mb-2">$6M+</div>
                  <div className="text-blue-100">–ì–æ–¥–æ–≤–∞—è –≤—ã—Ä—É—á–∫–∞</div>
                </div>
                <div>
                  <div className="text-3xl font-bold mb-2">97%</div>
                  <div className="text-blue-100">–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å</div>
                </div>
              </div>
            </CardContent>
          </Card>
        </motion.div>
      </div>
    </section>
  );
}
